
CREATE TABLE tb_admin(
     adm_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
     full_name VARCHAR(45) NOT NULL,
     username VARCHAR(45) NOT NULL UNIQUE,
     password VARCHAR(45) NOT NULL,
     create_at DATE,
     update_at DATE,
     login_count INTEGER,
     enabled BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE tb_branches(
    branch_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(45) NOT NULL UNIQUE ,
    address VARCHAR(45) ,
    description VARCHAR(45) ,
    adm_id INTEGER REFERENCES tb_admin(adm_seq),
    enabled BOOLEAN DEFAULT TRUE
);

CREATE TABLE tb_depart(
      depart_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      name VARCHAR(45) NOT NULL ,
      short_name VARCHAR(45) NOT NULL ,
      description VARCHAR(45) ,
      branch_id INTEGER REFERENCES tb_branches(branch_seq),
      adm_id INTEGER REFERENCES tb_admin(adm_seq),
      enabled BOOLEAN DEFAULT TRUE
);


CREATE TABLE tb_positions(
     pos_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
     pos_name VARCHAR,
     description VARCHAR,
     adm_id INTEGER REFERENCES tb_admin(adm_seq),
     enabled BOOLEAN DEFAULT TRUE
);

CREATE TABLE tb_locations(
     loc_seq INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
     name VARCHAR(45) NOT NULL ,
     latitude VARCHAR(45) NOT NULL ,
     longitude VARCHAR(45) NOT NULL ,
     branch_id INTEGER REFERENCES tb_branches(branch_seq),
     adm_id INTEGER REFERENCES tb_admin(adm_seq),
     enabled BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE tb_staffs(
      staff_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      staff_number VARCHAR(45) NOT NULL,
      full_name VARCHAR(45) ,
      age INTEGER ,
      gender INTEGER ,
      email VARCHAR(45),
      phone VARCHAR(45),
      profile_img VARCHAR(45),
      profile_img_path VARCHAR(45),
      account_status INTEGER,
      pos_id INTEGER REFERENCES tb_positions(pos_seq),
      branch_id INTEGER REFERENCES tb_branches(branch_seq),
      department_id INTEGER REFERENCES tb_depart(depart_seq),
      adm_id INTEGER REFERENCES tb_admin(adm_seq),
      enabled BOOLEAN DEFAULT TRUE
);

CREATE TABLE tb_users(
     user_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
     staff_id INTEGER NOT NULL REFERENCES tb_staffs(staff_seq),
     adm_id INTEGER NOT NULL REFERENCES tb_admin(adm_seq),
     full_name VARCHAR(45) NOT NULL,
     username VARCHAR(45) NOT NULL UNIQUE,
     password VARCHAR(45) NOT NULL,
     create_at DATE,
     create_id INTEGER,
     update_at DATE,
     update_id INTEGER,
     login_count INTEGER,
     enabled BOOLEAN NOT NULL DEFAULT TRUE
);

CREATE TABLE tb_user_groups(
    g_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    manager_id INTEGER,
    member_id INTEGER

);

-- CREATE TABLE tb_roles(
--     role_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     role_name VARCHAR (45) NOT NULL ,
--     user_id INTEGER NOT NULL REFERENCES tb_users(user_seq),
--     adm_id INTEGER NOT NULL REFERENCES tb_admin(adm_seq),
--     enabled BOOLEAN NOT NULL DEFAULT TRUE
-- );


CREATE TABLE tb_user_log(
    log_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    activity VARCHAR(45),
    activity_dt VARCHAR(45),
    user_id INTEGER REFERENCES tb_users (user_seq),
    adm_id INTEGER REFERENCES tb_admin(adm_seq)
);

CREATE TABLE tb_leave_types(
   leave_type_seq INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
   leave_name VARCHAR(45) NOT NULL,
   leave_description VARCHAR(100),
   number_days_allowed INTEGER NOT NULL,
   adm_id INTEGER REFERENCES tb_admin(adm_seq),
   enabled BOOLEAN NOT NULL DEFAULT TRUE

);

CREATE TABLE tb_leave_app(
     app_seq INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
     refer_number VARCHAR(45) NOT NULL,
     leave_type_id INTEGER,
     date_of_app DATE NOT NULL,
     attachment text,
     leave_status INTEGER,
     remarks VARCHAR(100),
     date_of_approval DATE,
     user_id INTEGER REFERENCES tb_users(user_seq),
     adm_id INTEGER REFERENCES tb_admin(adm_seq),
     staff_id INTEGER REFERENCES tb_staffs(staff_seq),
     enabled BOOLEAN DEFAULT TRUE
);

CREATE TABLE tb_attn(
    attn_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    staff_number VARCHAR,
    attn_type VARCHAR,
    attn_dt VARCHAR,
    create_by VARCHAR,
    create_dt VARCHAR,
    approved_by VARCHAR,
    approve_dt VARCHAR,
    user_id INTEGER REFERENCES tb_users(user_seq),
    staff_id INTEGER REFERENCES tb_staffs(staff_seq)
);

-- create default username and password login system
INSERT INTO tb_admin (username, full_name, password, enabled) VALUES ('user','hello world', '123456', TRUE);


-- CREATE TABLE tb_companies(
--      company_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--      company_name VARCHAR(45) NOT NULL UNIQUE ,
--      company_short_name VARCHAR(45) NOT NULL,
--      description VARCHAR(45),
--      branch_id INTEGER REFERENCES tb_branches(branch_seq),
--      adm_id INTEGER REFERENCES tb_admin(adm_seq),
--      enabled BOOLEAN DEFAULT TRUE
-- );

-- CREATE TABLE tb_user_roles(
--     user_role_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     user_id INTEGER NOT NULL REFERENCES tb_users(user_seq)
--     role_id INTEGER NOT NULL REFERENCES tb_roles(role_seq)
--     enabled BOOLEAN NOT NULL DEFAULT TRUE
-- );

-- CREATE TABLE tb_permissions(
--     per_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     per_type VARCHAR (45)
--     enabled BOOLEAN NOT NULL DEFAULT TRUE
-- );
--
-- CREATE TABLE tb_role_permissions(
--     r_per_id INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     role_id NTEGER NOT NULL REFERENCES tb_roles(role_seq),
--     enabled BOOLEAN NOT NULL DEFAULT TRUE
--
-- );

-- CREATE TABLE tb_user_grp(
--     user_group_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--     group_name VARCHAR(45) NOT NULL ,
--     description VARCHAR(100),
--     allow_add INTEGER,
--     allow_edit INTEGER,
--     allow_delete INTEGER,
--     allow_print INTEGER,
--     allow_import INTEGER ,
--     allow_export INTEGER,
--     user_id INTEGER NOT NULL REFERENCES tb_users(user_seq)
-- );

-- CREATE TABLE tb_feature_acc(
--      acc_seq INTEGER NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
--      acc_depart INTEGER,
--      acc_company INTEGER,
--      acc_branch INTEGER,
--      acc_staff INTEGER,
--      acc_leave_type INTEGER,
--      acc_leave_app INTEGER,
--      acc_sms INTEGER,
--      acc_users INTEGER,
--      user_id INTEGER REFERENCES tb_users(user_seq)
-- );



